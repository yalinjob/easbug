name: Docker-build-with-evidence-easbug-ya

on:
  [workflow_dispatch]

permissions:
  id-token: write
  contents: read

jobs:
  Docker-build-with-evidence:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ya-easbug-dev-virtul
    steps:

      - uses: actions/checkout@v4

      - name: Install jfrog cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.ARTIFACTORY_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

      - name: Security Audit
        run: | 
          jf audit



      - name: Build Docker image (no cache)
        run: |
          URL=$(echo ${{ vars.ARTIFACTORY_URL }} | sed 's|^https://||')
          REPO_URL=${URL}/${REPO_NAME}
          # Adding --no-cache to ensure a fresh build without using cache
          docker build --no-cache -t ${REPO_URL}/example-go-app:${{ github.run_number }} .
          jf docker push ${REPO_URL}/example-go-app:${{ github.run_number }}


 

      - name: Evidence on docker
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > sign.json
          jf evd create --package-name example-go-app --package-version ${{ github.run_number }} --package-repo-name ${REPO_NAME} \
          --key "${{ secrets.PRIVATE_KEY }}" --key-alias ${{ secrets.KEY_ALIAS }} \
          --predicate ./sign.json --predicate-type https://jfrog.com/evidence/signature/v1 
          echo '🔎 Evidence attached: `signature` 🔏 ' 

      - name: Collecting Information from Git
        run: jf rt build-add-git

      - name: Collecting Environment Variables
        run: jf rt build-collect-env

      - name: Publish build info
        run: jfrog rt build-publish

      - name: Scan Build
        run: | 
          jf bs ${{ secrets.BUILD_NAME }} $GITHUB_RUN_NUMBER --fail=false --vuln --format table --rescan

        
      - name: Sign build evidence
        run: |
          echo '{ "actor": "${{ github.actor }}", "date": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'" }' > sign.json
          jf evd create --build-name ${{ github.workflow }} --build-number ${{ github.run_number }} \
            --predicate ./sign.json --predicate-type https://jfrog.com/evidence/build-signature/v1 \
            --key "${{ secrets.PRIVATE_KEY }}"  --key-alias ${{ secrets.KEY_ALIAS }}
          echo '🔎 Evidence attached: `build-signature` 🔏 ' >> $GITHUB_STEP_SUMMARY

      - name: Create release bundle
        run: |
          echo '{ "files": [ {"build": "'"${{ github.workflow }}/${{ github.run_number }}"'" } ] }' > bundle-spec.json
          jf release-bundle-create ${{ github.actor }}-evidence-easbug ${{ github.run_number }} --signing-key ${{ secrets.RB_KEY }} --spec bundle-spec.json --sync=true
          VER_LINK=${{ vars.ARTIFACTORY_URL }}'/ui/artifactory/lifecycle/?bundleName='${{ github.actor }}-evidence-training'&bundleToFlash='${{ github.actor }}-evidence-training'&releaseBundleVersion='${{ github.run_number }}'&repositoryKey=release-bundles-v2&activeKanbanTab=promotion'
          echo '📦 Release bundle ['${{ github.actor }}-evidence-easybug:${{ github.run_number }}']('${VER_LINK}') created' >> $GITHUB_STEP_SUMMARY

